#!/usr/bin/env ruby

require 'net/http'
require 'json'

require 'getoptlong'

STATE_FILE="/tmp/exodus_test_binlog_client_state"

database=ARGV[0]
account=ARGV[1]
cmd=ARGV[2]
USAGE="usage: test_client DATABASE ACCOUNT_ID [mark|replay]"
if !cmd
  abort USAGE
end

case cmd
when "mark"
  json = Net::HTTP.get(URI("http://localhost:5056/mark_binlog_top?db=#{database}"))
  response = JSON.parse(json)

  File.write(STATE_FILE, {file: response['file'], pos: response['pos']}.to_json)
when "replay"
  binlog_pos = JSON.parse(File.read(STATE_FILE))
  query = URI.encode_www_form(start_file: binlog_pos['file'], 
                              start_pos: binlog_pos['pos'],
                              db: database,
                              account_id: account)

  uri = URI.parse("http://localhost:5056/binlog_events?#{query}")
  response = Net::HTTP.get_response(uri)
  puts response.body
else
  abort USAGE
end

